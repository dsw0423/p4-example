
firewallÚ{
  "schema_version" : "1.0.0",
  "tables" : [
    {
      "name" : "pipe.ingress.ipv4_table",
      "id" : 45814083,
      "table_type" : "MatchAction_Direct",
      "size" : 1048576,
      "annotations" : [],
      "depends_on" : [],
      "has_const_default_action" : true,
      "key" : [
        {
          "id" : 1,
          "name" : "headers.ipv4.dst_addr",
          "repeated" : false,
          "annotations" : [],
          "mandatory" : false,
          "match_type" : "Exact",
          "type" : {
            "type" : "bytes",
            "width" : 32
          }
        }
      ],
      "action_specs" : [
        {
          "id" : 24567654,
          "name" : "ingress.ipv4_fwd",
          "action_scope" : "TableAndDefault",
          "annotations" : [],
          "data" : [
            {
              "id" : 1,
              "name" : "ethernet_dst_addr",
              "repeated" : false,
              "mandatory" : true,
              "read_only" : false,
              "annotations" : [],
              "type" : {
                "type" : "bytes",
                "width" : 48
              }
            },
            {
              "id" : 2,
              "name" : "ethernet_src_addr",
              "repeated" : false,
              "mandatory" : true,
              "read_only" : false,
              "annotations" : [],
              "type" : {
                "type" : "bytes",
                "width" : 48
              }
            },
            {
              "id" : 3,
              "name" : "port_out",
              "repeated" : false,
              "mandatory" : true,
              "read_only" : false,
              "annotations" : [],
              "type" : {
                "type" : "bytes",
                "width" : 32
              }
            }
          ]
        },
        {
          "id" : 33281717,
          "name" : "ingress.drop",
          "action_scope" : "TableAndDefault",
          "annotations" : [],
          "data" : []
        }
      ],
      "data" : [],
      "supported_operations" : [],
      "attributes" : ["EntryScope"]
    }
  ],
  "learn_filters" : []
}×0
pipe¢{
  "program_name" : "firewall",
  "build_date" : "Mon Oct 14 18:06:00 2024",
  "compile_command" : "p4c-dpdk --arch pna --p4runtime-files /root/p4-examples/firewall/p4Info.txt --bf-rt-schema /root/p4-examples/firewall/bf-rt.json --context /root/p4-examples/firewall/context.json -o /root/p4-examples/firewall/firewall.spec /root/p4-examples/firewall/firewall.p4",
  "compiler_version" : "0.1 (SHA: a73a7fc2d BUILD: RELEASE)",
  "schema_version" : "0.1",
  "target" : "DPDK",
  "tables" : [
    {
      "name" : "ingress.ipv4_table",
      "target_name" : "ipv4_table",
      "direction" : "ingress",
      "handle" : 45814083,
      "table_type" : "match",
      "size" : 1048576,
      "p4_hidden" : false,
      "add_on_miss" : false,
      "idle_timeout_with_auto_delete" : false,
      "stateful_table_refs" : [],
      "statistics_table_refs" : [],
      "meter_table_refs" : [],
      "match_key_fields" : [
        {
          "name" : "headers.ipv4.dst_addr",
          "instance_name" : "headers.ipv4",
          "field_name" : "dst_addr",
          "match_type" : "exact",
          "start_bit" : 0,
          "bit_width" : 32,
          "bit_width_full" : 32,
          "position" : 0
        }
      ],
      "actions" : [
        {
          "name" : "ingress.ipv4_fwd",
          "target_name" : "ingress.ipv4_fwd",
          "handle" : 24567654,
          "constant_default_action" : false,
          "is_compiler_added_action" : false,
          "allowed_as_hit_action" : true,
          "allowed_as_default_action" : false,
          "p4_parameters" : [
            {
              "name" : "ethernet_dst_addr",
              "start_bit" : 0,
              "bit_width" : 48,
              "position" : 0,
              "byte_array_index" : 0
            },
            {
              "name" : "ethernet_src_addr",
              "start_bit" : 0,
              "bit_width" : 48,
              "position" : 1,
              "byte_array_index" : 6
            },
            {
              "name" : "port_out",
              "start_bit" : 0,
              "bit_width" : 32,
              "position" : 2,
              "byte_array_index" : 12
            }
          ]
        },
        {
          "name" : "ingress.drop",
          "target_name" : "ingress.drop_1",
          "handle" : 33281717,
          "constant_default_action" : true,
          "is_compiler_added_action" : false,
          "allowed_as_hit_action" : true,
          "allowed_as_default_action" : true,
          "p4_parameters" : []
        }
      ],
      "match_attributes" : {
        "stage_tables" : [
          {
            "action_format" : [
              {
                "action_name" : "ingress.ipv4_fwd",
                "action_handle" : 24567654,
                "immediate_fields" : [
                  {
                    "param_name" : "ethernet_dst_addr",
                    "dest_start" : 0,
                    "dest_width" : 48
                  },
                  {
                    "param_name" : "ethernet_src_addr",
                    "dest_start" : 6,
                    "dest_width" : 48
                  },
                  {
                    "param_name" : "port_out",
                    "dest_start" : 12,
                    "dest_width" : 32
                  }
                ]
              },
              {
                "action_name" : "ingress.drop",
                "action_handle" : 33281717,
                "immediate_fields" : []
              }
            ]
          }
        ]
      },
      "default_action_handle" : 33281717
    }
  ],
  "externs" : []
}£
struct ethernet_t {
	bit<48> dst_addr
	bit<48> src_addr
	bit<16> ether_type
}

struct ipv4_t {
	bit<8> ver_ihl
	bit<8> diffserv
	bit<16> total_len
	bit<16> identification
	bit<16> flags_offset
	bit<8> ttl
	bit<8> protocol
	bit<16> hdr_checksum
	bit<32> src_addr
	bit<32> dst_addr
}

struct tcp_t {
	bit<16> srcPort
	bit<16> dstPort
	bit<32> seqNo
	bit<32> ackNo
	bit<8> dataOffset_res
	bit<8> flags
	bit<16> window
	bit<16> checksum
	bit<16> urgentPtr
}

struct psa_ingress_output_metadata_t {
	bit<8> class_of_service
	bit<8> clone
	bit<16> clone_session_id
	bit<8> drop
	bit<8> resubmit
	bit<32> multicast_group
	bit<32> egress_port
}

struct psa_egress_output_metadata_t {
	bit<8> clone
	bit<16> clone_session_id
	bit<8> drop
}

struct psa_egress_deparser_input_metadata_t {
	bit<32> egress_port
}

struct ipv4_fwd_arg_t {
	bit<48> ethernet_dst_addr
	bit<48> ethernet_src_addr
	bit<32> port_out
}

header ethernet instanceof ethernet_t
header ipv4 instanceof ipv4_t
header tcp instanceof tcp_t

struct local_metadata_t {
	bit<32> psa_ingress_input_metadata_ingress_port
	bit<8> psa_ingress_output_metadata_drop
	bit<32> psa_ingress_output_metadata_multicast_group
	bit<32> psa_ingress_output_metadata_egress_port
}
metadata instanceof local_metadata_t

action drop_1 args none {
	mov m.psa_ingress_output_metadata_drop 1
	return
}

action ipv4_fwd args instanceof ipv4_fwd_arg_t {
	mov m.psa_ingress_output_metadata_drop 0
	mov m.psa_ingress_output_metadata_multicast_group 0x0
	mov m.psa_ingress_output_metadata_egress_port t.port_out
	mov h.ethernet.src_addr t.ethernet_src_addr
	mov h.ethernet.dst_addr t.ethernet_dst_addr
	jmpneq LABEL_END t.port_out 0x0
	jmpneq LABEL_END h.tcp.flags 0x2
	mov m.psa_ingress_output_metadata_drop 1
	mov m.psa_ingress_output_metadata_multicast_group 0x0
	mov m.psa_ingress_output_metadata_egress_port t.port_out
	LABEL_END :	return
}

table ipv4_table {
	key {
		h.ipv4.dst_addr exact
	}
	actions {
		ipv4_fwd
		drop_1
	}
	default_action drop_1 args none const
	size 0x100000
}


apply {
	rx m.psa_ingress_input_metadata_ingress_port
	mov m.psa_ingress_output_metadata_drop 0x1
	extract h.ethernet
	jmpeq PACKET_PARSER_PARSE_IPV4 h.ethernet.ether_type 0x800
	jmp PACKET_PARSER_ACCEPT
	PACKET_PARSER_PARSE_IPV4 :	extract h.ipv4
	jmpeq PACKET_PARSER_PARSE_TCP h.ipv4.protocol 0x6
	jmp PACKET_PARSER_ACCEPT
	PACKET_PARSER_PARSE_TCP :	extract h.tcp
	PACKET_PARSER_ACCEPT :	table ipv4_table
	jmpneq LABEL_DROP m.psa_ingress_output_metadata_drop 0x0
	emit h.ethernet
	emit h.ipv4
	emit h.tcp
	tx m.psa_ingress_output_metadata_egress_port
	LABEL_DROP :	drop
}


" 